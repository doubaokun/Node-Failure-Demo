//akka.persistence.journal.leveldb.dir = "target/example/journal"
//akka.persistence.snapshot-store.local.dir = "target/example/snapshots"

akka.persistence.journal.plugin = "cassandra-journal"
//cassandra-journal.contact-points = ["172.16.0.6","172.16.0.7" ]
contact-points = ["127.0.0.1"]
# DO NOT USE THIS IN PRODUCTION !!!
# See also https://github.com/typesafehub/activator/issues/287
//akka.persistence.journal.leveldb.native = false
//akka.cluster.auto-down-unreachable-after = 10s
akka {
  log-config-on-start = off
  //loglevel = DEBUG
  loglevel = INFO
  stdout-loglevel = "DEBUG"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = OFF
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    # serialize-messages = on
    # serialize-creators = on
    default-dispatcher {
      throughput = 10000
      fork-join-executor {
        parallelism-factor = 4.0
      }
    }

  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      //hostname = "172.16.0.6"
      port = 0
    }
  }
  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2553",
      "akka.tcp://ClusterSystem@127.0.0.1:2554"]
      //"akka.tcp://ClusterSystem@172.16.0.6:2553",
      //"akka.tcp://ClusterSystem@172.16.0.6:2554"]

    auto-down-unreachable-after = 5s
  }
}

spray {
  can.server {
    loglevel = "DEBUG"

    # The value of the `Server` header to produce.
    # Set to the empty string to disable rendering of the server header.
    server-header = spray-can/${spray.version}/modelergy-platform

    # The time after which an idle connection will be automatically closed.
    # Set to `infinite` to completely disable idle connection timeouts.
    idle-timeout = 60 s

    # If a request hasn't been responded to after the time period set here
    # a `spray.http.Timedout` message will be sent to the timeout handler.
    # Set to `infinite` to completely disable request timeouts.
    request-timeout = 20s

    # After a `Timedout` message has been sent to the timeout handler and the
    # request still hasn't been completed after the time period set here
    # the server will complete the request itself with an error response.
    # Set to `infinite` to disable timeout timeouts.
    timeout-timeout = 2 s

    # Enables/disables SSL encryption.
    # If enabled the server uses the implicit `ServerSSLEngineProvider` member
    # of the `Bind` command to create `SSLEngine` instances for the underlying
    # IO connection.
    ssl-encryption = off

    # Enables/disables the addition of a `Remote-Address` header
    # holding the clients (remote) IP address.
    remote-address-header = on

    # Enables/disables the addition of a `Raw-Request-URI` header holding the
    # original raw request URI as the client has sent it.
    raw-request-uri-header = off

    # Enables/disables the returning of more detailed error messages to
    # the client in the error response.
    # Should be disabled for browser-facing APIs due to the risk of XSS attacks
    # and (probably) enabled for internal or non-browser APIs.
    # Note that spray will always produce log messages containing the full
    # error details.
    verbose-error-messages = off

    # The maximum number of requests that are accepted (and dispatched to
    # the application) on one single connection before the first request
    # has to be completed.
    # Incoming requests that would cause the pipelining limit to be exceeded
    # are not read from the connections socket so as to build up "back-pressure"
    # to the client via TCP flow control.
    # A setting of 1 disables HTTP pipelining, since only one request per
    # connection can be "open" (i.e. being processed by the application) at any
    # time. Set to higher values to enable HTTP pipelining.
    # Set to 'disabled' for completely disabling pipelining limits
    # (not recommended on public-facing servers due to risk of DoS attacks).
    # This value must be > 0 and <= 128.
    pipelining-limit = 2 # for maximum performance (prevents StopReading / ResumeReading messages to the IOBridge)

    spray.io.no-delay = 1
    spray.io.parallelism = 4
  }
  util {
    log-actor-paths-with-dots = on
  }
  routing {
    loglevel = "DEBUG"
    users {
      demouser  = "demopass"
      bob = "thetester"
      platformkey = "COTSpass101"
    }
  }
}

